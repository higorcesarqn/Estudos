CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);

CREATE SCHEMA IF NOT EXISTS pessoa;

CREATE SCHEMA IF NOT EXISTS identidade;

CREATE EXTENSION IF NOT EXISTS pgcrypto;

CREATE TABLE identidade.permission (
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    nome character varying(30) NOT NULL,
    titulo character varying(256) NULL,
    descricao text NULL,
    CONSTRAINT pk_permission PRIMARY KEY (id)
);

CREATE TABLE identidade.role (
    id uuid NOT NULL,
    name character varying(256) NULL,
    normalized_name character varying(256) NULL,
    concurrency_stamp text NULL,
    CONSTRAINT pk_role PRIMARY KEY (id)
);

CREATE TABLE identidade."user" (
    id uuid NOT NULL,
    username character varying(30) NULL,
    normalized_username character varying(30) NULL,
    email character varying(256) NULL,
    normalized_email character varying(256) NULL,
    email_confirmed boolean NOT NULL,
    password_hash text NULL,
    security_stamp text NULL,
    concurrency_stamp text NULL,
    phone_number text NULL,
    phone_number_confirmed boolean NOT NULL,
    two_factor_enabled boolean NOT NULL,
    lockout_end timestamp with time zone NULL,
    lockout_enabled boolean NOT NULL,
    access_failed_count integer NOT NULL,
    name character varying(60) NULL,
    CONSTRAINT pk_user PRIMARY KEY (id)
);

CREATE TABLE pessoa.dom_escolaridade (
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    nome text NULL,
    CONSTRAINT pk_dom_escolaridade PRIMARY KEY (id)
);

CREATE TABLE pessoa.dom_tipo_endereco (
    id integer NOT NULL,
    nome text NOT NULL,
    CONSTRAINT pk_dom_tipo_endereco PRIMARY KEY (id)
);

CREATE TABLE pessoa.dom_tipo_pessoa (
    id integer NOT NULL,
    nome text NULL,
    CONSTRAINT pk_dom_tipo_pessoa PRIMARY KEY (id)
);

CREATE TABLE pessoa.dom_tipo_telefone (
    id integer NOT NULL,
    nome text NULL,
    CONSTRAINT pk_dom_tipo_telefone PRIMARY KEY (id)
);

CREATE TABLE identidade.role_claims (
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    role_id uuid NOT NULL,
    claim_type text NULL,
    claim_value text NULL,
    CONSTRAINT pk_role_claims PRIMARY KEY (id),
    CONSTRAINT fk_role_claims_role_role_id FOREIGN KEY (role_id) REFERENCES identidade.role (id) ON DELETE CASCADE
);

CREATE TABLE identidade.user_claim (
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    user_id uuid NOT NULL,
    claim_type text NULL,
    claim_value text NULL,
    CONSTRAINT pk_user_claim PRIMARY KEY (id),
    CONSTRAINT fk_user_claim_user_user_id FOREIGN KEY (user_id) REFERENCES identidade."user" (id) ON DELETE CASCADE
);

CREATE TABLE identidade.user_login (
    login_provider text NOT NULL,
    provider_key text NOT NULL,
    provider_display_name text NULL,
    user_id uuid NOT NULL,
    CONSTRAINT pk_user_login PRIMARY KEY (login_provider, provider_key),
    CONSTRAINT fk_user_login_user_user_id FOREIGN KEY (user_id) REFERENCES identidade."user" (id) ON DELETE CASCADE
);

CREATE TABLE identidade.user_role (
    user_id uuid NOT NULL,
    role_id uuid NOT NULL,
    CONSTRAINT pk_user_role PRIMARY KEY (user_id, role_id),
    CONSTRAINT fk_user_role_role_role_id FOREIGN KEY (role_id) REFERENCES identidade.role (id) ON DELETE CASCADE,
    CONSTRAINT fk_user_role_user_user_id FOREIGN KEY (user_id) REFERENCES identidade."user" (id) ON DELETE CASCADE
);

CREATE TABLE identidade.user_token (
    user_id uuid NOT NULL,
    login_provider text NOT NULL,
    name text NOT NULL,
    value text NULL,
    CONSTRAINT pk_user_token PRIMARY KEY (user_id, login_provider, name),
    CONSTRAINT fk_user_token_user_user_id FOREIGN KEY (user_id) REFERENCES identidade."user" (id) ON DELETE CASCADE
);

CREATE TABLE pessoa.dom_tipo_documento (
    id integer NOT NULL,
    nome character varying(30) NOT NULL,
    descricao character varying(250) NOT NULL,
    id_tipo_pessoa integer NULL,
    CONSTRAINT pk_dom_tipo_documento PRIMARY KEY (id),
    CONSTRAINT fk_dom_tipo_documento_dom_tipo_pessoa_id_tipo_pessoa FOREIGN KEY (id_tipo_pessoa) REFERENCES pessoa.dom_tipo_pessoa (id) ON DELETE RESTRICT
);

CREATE TABLE pessoa.tbl_pessoa (
    id_pessoa uuid NOT NULL DEFAULT (gen_random_uuid()),
    data_inclusao timestamp without time zone NOT NULL DEFAULT (Now()),
    data_atualizacao timestamp without time zone NULL,
    nome character varying(250) NOT NULL,
    email character varying(512) NULL,
    nascimento DATE NULL,
    id_tipo_pessoa integer NOT NULL,
    id_escolaridade integer NULL,
    razao_social character varying(512) NULL,
    deficiente boolean NULL,
    estuda boolean NULL,
    CONSTRAINT pk_tbl_pessoa PRIMARY KEY (id_pessoa),
    CONSTRAINT tbl_pessoa_tbl_escolaridade_fk FOREIGN KEY (id_escolaridade) REFERENCES pessoa.dom_escolaridade (id) ON DELETE RESTRICT,
    CONSTRAINT tbl_pessoa_tbl_tipo_pessoa_fk FOREIGN KEY (id_tipo_pessoa) REFERENCES pessoa.dom_tipo_pessoa (id) ON DELETE CASCADE
);

CREATE TABLE pessoa.tbl_documento (
    id_documento uuid NOT NULL DEFAULT (gen_random_uuid()),
    data_inclusao timestamp without time zone NOT NULL DEFAULT (Now()),
    data_atualizacao timestamp without time zone NULL,
    id_pessoa uuid NULL,
    tipo json NULL,
    valor character varying(30) NOT NULL,
    CONSTRAINT pk_tbl_documento PRIMARY KEY (id_documento),
    CONSTRAINT tbl_documento_tbl_pessoa_fk FOREIGN KEY (id_pessoa) REFERENCES pessoa.tbl_pessoa (id_pessoa) ON DELETE CASCADE
);

CREATE TABLE pessoa.tbl_endereco (
    id_endereco uuid NOT NULL DEFAULT (gen_random_uuid()),
    data_inclusao timestamp without time zone NOT NULL DEFAULT (Now()),
    data_atualizacao timestamp without time zone NULL,
    cep character varying(10) NOT NULL,
    uf character varying(2) NOT NULL,
    cidade character varying(50) NOT NULL,
    bairro character varying(100) NOT NULL,
    id_tipo_endereco integer NULL,
    logradouro character varying(350) NOT NULL,
    numero character varying(15) NOT NULL,
    complemento character varying(150) NULL,
    id_pessoa uuid NULL,
    CONSTRAINT pk_tbl_endereco PRIMARY KEY (id_endereco),
    CONSTRAINT tbl_endereco_tbl_pessoa_fk FOREIGN KEY (id_pessoa) REFERENCES pessoa.tbl_pessoa (id_pessoa) ON DELETE CASCADE,
    CONSTRAINT tbl_endereco_tbl_tipo_endereco_fk FOREIGN KEY (id_tipo_endereco) REFERENCES pessoa.dom_tipo_endereco (id) ON DELETE RESTRICT
);

CREATE TABLE pessoa.tbl_telefone (
    id_telefone uuid NOT NULL DEFAULT (gen_random_uuid()),
    data_inclusao timestamp without time zone NOT NULL DEFAULT (Now()),
    data_atualizacao timestamp without time zone NULL,
    id_tipo_telefone integer NULL,
    ddd character varying(3) NOT NULL,
    numero character varying(15) NOT NULL,
    id_pessoa uuid NULL,
    CONSTRAINT pk_tbl_telefone PRIMARY KEY (id_telefone),
    CONSTRAINT tbl_telefone_tbl_pessoa_fk FOREIGN KEY (id_pessoa) REFERENCES pessoa.tbl_pessoa (id_pessoa) ON DELETE CASCADE,
    CONSTRAINT tbl_telefone_tbl_tipo_telefone_fk FOREIGN KEY (id_tipo_telefone) REFERENCES pessoa.dom_tipo_telefone (id) ON DELETE RESTRICT
);

CREATE UNIQUE INDEX role_normalize_name_index ON identidade.role (normalized_name);

CREATE INDEX role_claims_id_index ON identidade.role_claims (role_id);

CREATE INDEX email_index ON identidade."user" (normalized_email);

CREATE UNIQUE INDEX user_normalized_name_index ON identidade."user" (normalized_username);

CREATE INDEX user_claim_id_index ON identidade.user_claim (user_id);

CREATE INDEX user_login_id_index ON identidade.user_login (user_id);

CREATE INDEX user_role_id_index ON identidade.user_role (role_id);

CREATE INDEX ix_dom_tipo_documento_id_tipo_pessoa ON pessoa.dom_tipo_documento (id_tipo_pessoa);

CREATE INDEX ix_tbl_documento_valor ON pessoa.tbl_documento (valor);

CREATE INDEX ix_tbl_documento_id_pessoa ON pessoa.tbl_documento (id_pessoa);

CREATE INDEX ix_tbl_endereco_id_pessoa ON pessoa.tbl_endereco (id_pessoa);

CREATE INDEX ix_tbl_endereco_id_tipo_endereco ON pessoa.tbl_endereco (id_tipo_endereco);

CREATE INDEX ix_tbl_pessoa_id_escolaridade ON pessoa.tbl_pessoa (id_escolaridade);

CREATE INDEX ix_tbl_pessoa_id_tipo_pessoa ON pessoa.tbl_pessoa (id_tipo_pessoa);

CREATE INDEX ix_tbl_telefone_id_pessoa ON pessoa.tbl_telefone (id_pessoa);

CREATE INDEX ix_tbl_telefone_id_tipo_telefone ON pessoa.tbl_telefone (id_tipo_telefone);

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20200621160012_InitialCreate', '3.1.5');

